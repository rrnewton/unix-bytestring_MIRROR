----------------------------------------------------------------
-- wren ng thornton <wren@community.haskell.org>    ~ 2011.03.07
----------------------------------------------------------------

Name:           unix-bytestring
Version:        0.3.0
-- Source-Repository requires version 1.6
Cabal-Version:  >= 1.6
-- We need a custom build in order to define __HADDOCK__
Build-Type:     Custom
Stability:      experimental
Copyright:      Copyright (c) 2010--2011 wren ng thornton
License:        BSD3
License-File:   LICENSE
Author:         wren ng thornton
Maintainer:     wren@community.haskell.org
Homepage:       http://code.haskell.org/~wren/
Category:       Data
Synopsis:       Unix/Posix-specific functions for ByteStrings.
Description:    Unix/Posix-specific functions for ByteStrings.
    .
    Provides @ByteString@ file-descriptor based I\/O API, designed
    loosely after the @String@ file-descriptor based I\/O API in
    "System.Posix.IO". The functions here wrap standard C implementations
    of the functions specified by the ISO\/IEC 9945-1:1990 (``POSIX.1'')
    and X\/Open Portability Guide Issue 4, Version 2 (``XPG4.2'')
    specifications.

Source-Repository head
    Type:     darcs
    Location: http://community.haskell.org/~wren/unix-bytestring

----------------------------------------------------------------
Library
    Hs-Source-Dirs:  src
    Exposed-Modules: System.Posix.IO.ByteString
                   , System.Posix.IO.ByteString.Lazy
                   , System.Posix.Types.Iovec

    -- TODO: actually we don't require unix>=2.4 anymore. Find the real lower bound.
    --
    -- We require base>=4.1 for Foreign.C.Error.throwErrnoIfMinus1Retry.
    -- We require unix>=2.4 for System.Posix.IO.fdReadBuf/fdWriteBuf,
    -- and unix-2.4.0.0 requires base>=4.1 too.
    --
    -- Not sure what the real minbound is on bytestring...
    Build-Depends: base       >= 4.1 && < 5
                 , bytestring >= 0.9.1.5
                 , unix       >= 2.4.0.0

----------------------------------------------------------------
----------------------------------------------------------- fin.
